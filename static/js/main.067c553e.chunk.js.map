{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","App","state","errorMess","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAGMA,G,MAAa,CACfC,OAAO,CACHC,KAAK,qBACLC,SAAS,OAEbC,OAAO,CACHF,KAAK,kBACLC,SAAS,eAuBFE,EAXK,SAACC,GACjB,IAVaC,EAAIC,EAUXC,GAVOF,EAUYD,EAAMC,KAVdC,GAUmB,IAAIE,MAAOC,YATrC,GAAKH,EAAO,EACXD,EAAK,EAAI,SAAW,SAGpBA,EAAI,EAAI,SAAW,UAIL,EAEHP,EAAaS,GAA5BP,EAFkB,EAElBA,KAAKC,EAFa,EAEbA,SACZ,OACA,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,8BAAyBT,EAAzB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,8BAAyBT,EAAzB,aCfLU,EAZA,SAAEP,GACb,OAEI,yBAAKM,UAAU,oBACb,yBAAKA,UAAU,uBAAuBN,EAAMQ,QAA5C,OCDJC,E,4MAEGC,MAAM,CAACT,IAAK,KAAMU,UAAU,I,kEAE5B,IAAD,OACIC,OAAOC,UAAUC,YAAYC,oBAEzB,SAACC,GAAD,OAAY,EAAKC,SAAS,CAAChB,IAAIe,EAASE,OAAOC,cAC/C,SAAAC,GAAG,OAAE,EAAKH,SAAS,CAACN,UAAUS,EAAIZ,e,+BAMpC,OAAGa,KAAKX,MAAMC,YAAYU,KAAKX,MAAMT,IAE/B,sCAAYoB,KAAKX,MAAMC,YAEzBU,KAAKX,MAAMC,WAAWU,KAAKX,MAAMT,IAE/B,6BAAK,kBAAC,EAAD,CAAeA,IAAKoB,KAAKX,MAAMT,OAGlC,6BAAK,kBAAC,EAAD,CAASO,QAAQ,wC,GAvB1Bc,IAAMC,WA6BxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,cAAc,W","file":"static/js/main.067c553e.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst seasonConfig={\n    summer:{\n        text:\"lets hit the beach\",\n        iconName:'sun'\n    },\n    winter:{\n        text:\"Burr ! its cold\",\n        iconName:'snowflake'\n    }\n}\nconst getSeason=(lat,month)=>{\n    if(month >2 && month <9){ \n        return lat >0 ? 'summer' : 'winter';\n    }\n    else{\n        return lat>0 ? 'winter' : 'summer';\n    }\n\n};\nconst SeasonDisplay=(props)=>{\n    const season = getSeason(props.lat, new Date().getMonth());\n    const {text,iconName}=seasonConfig[season];\n    return (\n    <div className={`season-display ${season}`}> \n        <i className={` icon-left  massive ${iconName} icon`}/>\n        <h1>{text}</h1>\n        <i className={` icon-right massive ${iconName} icon`}/>\n    </div>\n    );\n};\nexport default SeasonDisplay; ","import React from 'react';\n\nconst Spinner =( props) =>{\n    return (\n       // <div className=\"ui segment\">\n        <div className=\"ui active dimmer\">\n          <div className=\"ui  big text loader\">{props.message} </div>\n        \n        </div>\n        \n         //</div>\n    );\n\n};\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component{\n    \n         state={lat: null, errorMess:''};\n        componentDidMount()\n        {\n            window.navigator.geolocation.getCurrentPosition\n            (\n                (position)=>this.setState({lat:position.coords.latitude}),\n                err=>this.setState({errorMess:err.message})\n                    \n             );\n        }\n        render()\n          {\n              if(this.state.errorMess&&!this.state.lat)\n              {\n              return<div>Error:{this.state.errorMess}</div>;\n              }\n              if(!this.state.errorMess&&this.state.lat)\n              {\n              return<div><SeasonDisplay lat={this.state.lat}/></div>;\n              }\n        \n               return <div><Spinner message=\"please accept location request\"/></div>;\n           \n          }\n    \n    \n}\nReactDOM.render(<App/>,document.querySelector('#root'));"],"sourceRoot":""}